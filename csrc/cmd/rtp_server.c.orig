#include <stdio.h>
#include <stdlib.h>
#include <arpa/inet.h>
#include <netinet/in.h>
#include <stdio.h>
#include <sys/types.h>
#include <sys/socket.h>
#include <unistd.h>

#include <ccn/ccn.h>
#include <ccn/ccnd.h>

#define SRV_IP "127.0.0.1"
#define SRV_PORT 8085
#define BUFLEN 512
#define NPACK 10

enum ccn_upcall_res incoming_content(struct ccn_closure *selfp,
                                     enum ccn_upcall_kind kind,
                                     struct ccn_upcall_info *info)
{
    printf("Incoming content in rtp_server!\n");
    return(CCN_UPCALL_RESULT_OK);
}
int recRTSP()
{
	
struct sockaddr_in si_me, si_other;
int s, i, slen=sizeof(si_other);
char buf[BUFLEN];
if ((s=socket(AF_INET, SOCK_DGRAM, IPPROTO_UDP))==-1)
diep("socket");

 memset((char *) &si_me, 0, sizeof(si_me));
 si_me.sin_family = AF_INET;
si_me.sin_port = htons(PORT);
 si_me.sin_addr.s_addr = htonl(INADDR_ANY);
if (bind(s, &si_me, sizeof(si_me))==-1)
 diep("bind");

for (i=0; i<NPACK; i++) {
if (recvfrom(s, buf, BUFLEN, 0, &si_other, &slen)==-1)
diep("recvfrom()");
printf("Received packet from %s:%d\nData: %s\n\n", 
inet_ntoa(si_other.sin_addr), ntohs(si_other.sin_port), buf);
}

close(s);
	return 0;
}

int main(int argc, char **argv)
{
    struct ccn *ccn = NULL;
    struct ccn_charbuf *name = NULL;
    int res;
    struct ccn_closure *incoming = NULL;
    const char *progname = argv[0];
    struct ccn_charbuf *pname = NULL;
    struct ccn_charbuf *temp = NULL;
    long expire = -1;
    int versioned = 0;
    size_t blocksize = 8*1024;
    int status = 0;
    ssize_t read_res;
    unsigned char *buf = NULL;
    enum ccn_content_type content_type = CCN_CONTENT_DATA;
    
    incoming = calloc(1, sizeof(*incoming));
    incoming->p = &incoming_content;
    name = ccn_charbuf_create();
    

    
    const char *postver = NULL;
    const char *key_uri = NULL;

    struct ccn_signing_params sp = CCN_SIGNING_PARAMS_INIT;

    ccn = ccn_create();
    
    if (ccn_connect(ccn, NULL) == -1)
    {
        perror("Could not connect to ccnd");
        exit(1);
    }



 

	content_type = CCN_CONTENT_DATA;

	name = ccn_charbuf_create();
	res = ccn_name_from_uri(name, argv[1]);
	



    return 0;
}

